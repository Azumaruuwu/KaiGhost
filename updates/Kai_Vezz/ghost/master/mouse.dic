//---------------------------Mouse Functions--------------------------
//As you've probably guessed, this .dic file has to do with mouse functions. This includes the petting feature and what happens when you double click your ghost.

//--OnMouseMove
//This is a bunch of code determining who the mouse is over. Don't touch any of it.

OnMouseMove
 {
		//---- reference3 determines the character in question
		if reference3 == 0 //if the character is 0, aka the main character
		{
			//---- it will run the mouse functions for that character
			MouseMoveSakura
		}
		else //if the character isn't 0, then it must be the side character.
		{
			//---- this will run the mouse functions for the side character.
			MouseMoveKero
		}
 }
 
 //*********************Advanced User Info*******************************
//If you want to have more than two characters at any point, like for example how I added Charger with my Hunter/Smoker ghost, and you want to be able to interact with that character like you can with the others, you will have to add in that character to OnMouseMove above. You'll need to know the p[] you've assigned your third character to, which in Charger's case was 3.

//OnMouseMove determines who the user is touching, so you'll just have to add in an elseif checking for reference3 == 3, or reference3 == 4, or whatever p number is you're using. After that, you'll just need to copy and paste the other mouse functions below and change the name as you need (for example, MouseMoveCharger, MouseDoubleClickCharger).
//***********************************************************************


 //--MouseMoveSakura
 //The petting function for your main character.
 
MouseMoveSakura
 {
	if reference4 != "" //ignore
 	{
 		stroke++ //if you move the mouse over the right areas, the stroke count will go up.
 		if stroke >= 40 //if the stroke count is above a certain number, the petting dialogue will kick in. You can change this number to make the petting take longer or shorter if you want.
		{
 			stroke = 0 //resetting the stroke count
			kaipet += 2
			if reference4 == "Head" //do you remember the names of the areas you set up for your collisions in surfaces.txt? This is where you'd put in the name of your collision, such as head, face, horns, tail, ears, whatever.
 			{
				"\0\s[8]Pff-- Stop it!\e"
				
 			}
 			elseif reference4 == "Face" //Another area set up by the collisions in surfaces.txt.
 			{
 				"\0\s[0]This is petting dialogue for my face.\e"
 				"\0\s[0]This is more petting dialogue for my face.\e"
 				"\0\s[0]This is another bit of petting dialogue for my face. Well, stroking would probably be more accurate.\e"
 			}
			
 		}
	}
 	else
	{
 		// If the mouse isn't over the ghost, it'll zero out the stroke value.
		stroke = 0
 	}
}

 //---- MouseMoveKero -----------------------------------------------------------------
 //MouseMoveKero is exactly like the above, except set up for your second character. 
 
MouseMoveKero
 {
	if reference4 != ""
 	{
 		stroke++
 		if stroke >= 25
		{
			stroke = 0
			vezzpet += 1
			
			if reference4 == "Face" && vezzpet >= 35
			{
				"\1\Stop that.\e"
			}
			
			elseif reference4 == "Face" //Put in the name of your collision area you set up for your secondary character here.
 			{
				"\1\s[11]Leave me alone, \w2would you?\w8\w6\s[12]\e"
 			}
			
			elseif reference4 == "Head" && vezzpet >= 35
			{
				"\1\s[10]\i[0]...\e"
				"\1\s[12]... \w9\w8\s[10]\e"
			}
			
			elseif reference4 == "Head" //Like above, put in the name of another collision you set up in surfaces.txt for the secondary character.
			{
				"\1\s[11]Don't touch me.\e"
				"\1\s[11]Stop it. \w4\s[12]What are you even trying to do?\e"
				"\1\s[12]Stop bothering me.\w8\s[10]\e"
			}	
			
 		}
	}
 	else
	{
 		// If the mouse isn't over the ghost, it'll zero out the stroke value.
		stroke = 0
 	}
}

//---- OnMouseDoubleClick -------------------------------------------------------
//This is set up much like OnMouseMove above, except this is checking to see if the user is double clicking on the ghost. You also don't need to touch any of this. 
//Advanced users adding a third character, the same principles from OnMouseMove apply here as well! Make sure to add an elseif with the right number for your third character.

OnMouseDoubleClick
 {
	//---- like with the OnMouseMove function above, this determines who the user is clicking on.
	if reference5 == 0 //checks which button is being used for the click
	{
	 	if reference3 == 0 //if the character is 0, aka your main character
		{
		MouseDoubleClickSakura
		}
		else
		{
 		MouseDoubleClickKero
		}
	}
 }

 //---- MouseDoubleClickSakura ----------------------------------------------------------
 //Like the petting animation above, this is the reactions they have to being double clicked. These also rely on the collisions you set up in surfaces.txt!
 
 //*********************Advanced User Info*******************************
 //If you don't want your character to be hittable at all, you can just delete everything in MouseDoubleClickSakura except OpenSakuraMenu. So it'd look like
 
 //MouseDoubleClickSakura
 //{
 //OpenSakuraMenu
 //}
 
 //This method also applies to the secondary character, Kero, below this set.
 //***********************************************************************
 
MouseDoubleClickSakura
 {
 	if reference4 == "Head" || reference4 == "Face" //here, this is checking to see if the user is double clicking on either the character's head OR their face, which for our purposes means they're hitting the ghost.
	{
		"\0\s[8]Aak-- Stop pokeing me!\e"
		"\0\s[8]Pff-- What're you doing?!\e"
 	}
	else
 	{
		//Otherwise, if the user doubleclicks somewhere else on the character, they will open their menu as detailed in menu.dic.
 		OpenSakuraMenu
	}
 }

 
 //---- MouseDoubleClickKero -----------------------------------------------------------
 //This is just the same as MouseDoubleClickSakura above, except for your secondary character. The same principles apply, including how to make your character unhittable.
 
 
MouseDoubleClickKero
 {
 	if reference4 == "Face"
	{
		vezzheart -= 2
		
		"\1\s[10]...\e"
		"\1\s[10]...\e"
		"\1\s[11]... \w4Would you stop that?\w8\w6\s[10]\e"
 	}
	
	elseif reference4 == "Tail1" && vezzheart >= 50 || reference4 == "Tail2" && vezzheart >= 50 || reference4 == "Bobble" && vezzheart >= 50
	{
		"\1\s[12]Don't touch it.\w8\s[10]\nI'd rather you not hurt yourself.\e"
		
		"\1\s[12]Careful.\e"
	}
	
	elseif reference4 == "Tail1" || reference4 == "Tail2" || reference4 == "Bobble"
	{
		"\1\s[12]Don't touch it,\w1 you'll hurt yourself.\e"
		"\1\s[12]You'll get burnt if you touch that.\e"
		
	}
	else //Otherwise if you click anywhere else on Triangle's body
 	{
		OpenKeroMenu //This will open his menu set up in menu.dic.
	}
 }